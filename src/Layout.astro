---
import "@/styles.css";

import Lethal from "@/utils/Lethal.astro";
export interface Props {
	title: string;
	desc: string;
}

const { title = "Hyperion Proxy", desc = "A secure web proxy for unrestricted browsing" } = Astro.props;
---

<html lang="en">
  <head>
    <meta name="description" content={desc} />
    <meta charset="UTF-8" />
    <meta content="IE=edge" http-equiv="X-UA-Compatible" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
    />
    <meta content="0.1.5" name="version" />

    <link rel="icon" href="favicon.svg" sizes="any" type="image/svg+xml">

    <meta property="og:site_name" content="Hyperion Proxy" />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={desc} />

    <meta name="googlebot" content="index, follow, snippet" />
    <Lethal />
    <link rel="preconnect" href="https://images.placeholders.dev">

    <title>{title}</title>
  </head>
  <body class="text-text bg-base flex" data-theme="blackgold">
    <a
      href="#main"
      class="absolute left-4 top-4 z-50 bg-surface px-4 py-2 rounded-md shadow-lg
              transform -translate-y-16 opacity-0 transition-all duration-300 ease-in-out
              focus:translate-y-0 focus:opacity-100 hover:bg-overlay z-50 border border-gold/20"
    >
      Skip to main content
    </a>

    <main id="main" class="flex flex-col flex-grow h-screen bg-gradient-to-b from-black to-[#0b1528]">
      <slot />
    </main>

<script>
import { currentFrame } from "./utils/lethal";

  requestIdleCallback(() => {
    if (!localStorage.getItem("theme")) {
      localStorage.setItem("theme", "blackgold");
    }
    document.body.dataset.theme = localStorage.getItem("theme") || "blackgold";

    const originalSetItem = localStorage.setItem;
    localStorage.setItem = function (key) {
      originalSetItem.apply(this, arguments);
      window.dispatchEvent(new Event(`${key}-changed`));

      // Notify active tab about the change if it exists
      if (currentFrame?.contentWindow) {
        try {
          currentFrame.contentWindow.postMessage({ type: `${key}-changed` }, "*");
        } catch (e) {
          console.error("Error posting message to frame:", e);
        }
      }
    };

    window.addEventListener("theme-changed", () => {
      document.body.dataset.theme = localStorage.getItem("theme") || "blackgold";
    });

    const cloak = () => {
      const cloakValue = localStorage.getItem("cloak");
      if (!cloakValue || cloakValue === 'none') return;
      const cloakk = cloakValue.split("|");
      document.title = cloakk[0];
      const icon = document.querySelector("link[rel=icon]");
      if (icon) icon.href = cloakk[1];
    };

    window.addEventListener("cloak-changed", cloak);
    document.addEventListener("DOMContentLoaded", () => {
      document.body.dataset.theme = localStorage.getItem("theme") || "blackgold";
      cloak();
    });

    function updateClock() {
      const now = new Date();
      const hours = now.getHours().toString().padStart(2, '0');
      const minutes = now.getMinutes().toString().padStart(2, '0');
      const seconds = now.getSeconds().toString().padStart(2, '0');

      const clockElements = document.querySelectorAll('.clock-display');
      clockElements.forEach(element => {
        element.textContent = `${hours}:${minutes}:${seconds}`;
      });
    }

    updateClock();
    setInterval(updateClock, 1000);
  });
</script>
  </body>
</html>
