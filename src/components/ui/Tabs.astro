---
import { Icon } from "astro-icon/components";
---

<div class="flex items-center bg-surface border-b border-overlay h-10">
  <div id="tabs" class="flex-1 flex overflow-x-auto scrollbar-hide items-stretch"></div>
  <button
    id="new-tab-btn"
    class="mr-2 p-2 hover:bg-overlay hover:text-iris transition-colors duration-150 rounded-md focus:outline-none focus:ring-2 focus:ring-iris"
    aria-label="New Tab"
    title="New Tab"
  >
    <Icon name="ph:plus-bold" class="size-5" />
  </button>
</div>

<script>
import { currentTab, newTab, switchTab, closeTab } from "@/utils/lethal.ts";

  let tabs = [];
  const tabsDiv = document.getElementById("tabs");

  const getIcon = (url) =>
    /^https?:\/\/[\w.-]+\.[a-z]{2,}/i.test(url)
      ? `https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,URL&size=64&url=${url}`
      : "https://images.placeholders.dev/24";

  function createTab(id, title = "New Tab", url = "") {
    const tab = document.createElement("div");
    tab.className =
      "flex items-center min-w-[8rem] max-w-xs px-4 py-1 border-r border-overlay hover:bg-overlay cursor-pointer transition-all duration-150 draggable-tab";
    tab.dataset.tabId = id;

    tab.innerHTML = `
      <img class="w-4 h-4 mr-2 rounded" alt="Favicon" src="${getIcon(url)}" />
      <span class="tab truncate flex-1 text-sm">${title}</span>
      <button class="ml-2 text-text/50 hover:text-text text-sm focus:outline-none">&times;</button>
    `;

    tab.querySelector("button").onclick = (e) => {
      e.stopPropagation();
      closeTab?.(id);
    };
    tab.onclick = () => switchTab?.(id);

    tabsDiv.appendChild(tab);
    tabs.push({ id, element: tab, title, url });

    return tab;
  }

  function checkState() {
    const frames = [...document.querySelectorAll('iframe[id^="frame-"]')];
    const frameIds = frames.map((f) => parseInt(f.id.replace("frame-", ""), 10));

    tabs = tabs.filter(({ id, element }) => {
      if (!frameIds.includes(id)) {
        element.remove();
        return false;
      }
      return true;
    });

    frameIds.forEach((id) => {
      if (!tabs.some((t) => t.id === id)) createTab(id);
    });

    const visible = frames.find((f) => !f.classList.contains("hidden"));
    if (visible) {
      const activeId = parseInt(visible.id.replace("frame-", ""), 10);
      tabs.forEach(({ id, element }) => {
        const isActive = id === activeId;
        element.classList.toggle("bg-overlay", isActive);
        element.classList.toggle("active", isActive);
        element.classList.toggle("font-medium", isActive);
        element.classList.toggle("border-b-2", isActive);
        element.classList.toggle("border-iris", isActive);
      });
    }
  }

  document.getElementById("new-tab-btn")?.addEventListener("click", () => newTab?.());

  document.addEventListener("new-tab", (e) => {
    if (!tabs.some((t) => t.id === e.detail.tabNumber)) createTab(e.detail.tabNumber);
    checkState();
  });

  document.addEventListener("switch-tab", (e) => {
    const activeId = e.detail.tabNumber;
    tabs.forEach(({ id, element }) => {
      const isActive = id === activeId;
      element.classList.toggle("bg-overlay", isActive);
      element.classList.toggle("active", isActive);
      element.classList.toggle("font-medium", isActive);
      element.classList.toggle("border-b-2", isActive);
      element.classList.toggle("border-iris", isActive);
    });
  });

  document.addEventListener("url-changed", (e) => {
    const tab = tabs.find((t) => t.id === e.detail.tabId);
    if (!tab) return;
    tab.title = e.detail.title || "New Tab";
    tab.url = e.detail.url || "";
    tab.element.querySelector(".tab").textContent = tab.title;
    tab.element.querySelector("img").src = getIcon(tab.url);
  });

  document.addEventListener("close-tab", (e) => {
    const idx = tabs.findIndex((t) => t.id === e.detail.tabNumber);
    if (idx === -1) return;
    tabs[idx].element.remove();
    tabs.splice(idx, 1);
    checkState();
  });

  checkState();
</script>

<style>
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  [data-tab-id] {
    border-bottom: 2px solid transparent;
    transition: all 0.2s ease;
  }
  [data-tab-id]:hover,
  [data-tab-id].active {
    background-color: var(--color-overlay);
  }
  [data-tab-id].active {
    border-bottom-color: var(--color-iris);
  }
</style>
