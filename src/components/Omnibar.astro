---
import Settings from "@/components/Settings.astro"
import { Icon } from 'astro-icon/components';
---
<div class="bg-rose-pine-base p-2 flex items-center space-x-2">
  <h1 class="mr-auto">bromine</h1>

  <div class="flex items-center justify-center flex-1 space-x-2">
    <button
      aria-label="Back"
      id="omnibar-back-btn"
      class="bg-rose-pine-surface p-1.5 rounded-md hover:bg-gray-600"
    >
      <Icon name="tabler:arrow-left" class="w-5 h-5" />
    </button>

    <button
      aria-label="Forward"
      id="omnibar-forward-btn"
      class="bg-rose-pine-surface p-1.5 rounded-md hover:bg-gray-600"
    >
      <Icon name="tabler:arrow-right" class="w-5 h-5" />
    </button>

    <button
      aria-label="Reload"  
      id="omnibar-reload-btn"
      class="bg-rose-pine-surface p-1.5 rounded-md hover:bg-gray-600"
    >
      <Icon name="tabler:reload" class="w-5 h-5" />
    </button>

    <div class="bg-rose-pine-surface flex items-center rounded-md px-3 py-1.5">
      <Icon name="tabler:search" class="w-5 h-5 mr-2" />
      <form id="form" class="flex-center w-md"> 
        <input
          spellcheck="false"
          autofocus
          autocomplete="off"
          id="address"
          type="text"
          placeholder="Search the web freely"
          class="bg-transparent w-full focus:outline-none"
        />
      </form>
    </div>

    <button
      aria-label="Settings"
      id="omnibar-settings-btn"
      class="bg-rose-pine-surface p-1.5 rounded-md hover:bg-gray-600"
    >
      <Icon name="tabler:settings" class="w-5 h-5"/>
    </button>
  </div>
</div>

<Settings id="settings-popup"/>

<style>

</style>

<script is:inline defer async>
  const backButton = document.getElementById('omnibar-back-btn');
  const forwardButton = document.getElementById('omnibar-forward-btn');
  const reloadButton = document.getElementById('omnibar-reload-btn');
  const settingsButton = document.getElementById('omnibar-settings-btn');

  backButton.addEventListener('click', () => {
    const iframe = document.getElementById('frame');
    if (iframe && iframe.contentWindow) {
      iframe.contentWindow.history.back();
    }
  });

  forwardButton.addEventListener('click', () => {
    const iframe = document.getElementById('frame');
    if (iframe && iframe.contentWindow) {
      iframe.contentWindow.history.forward();
    }
  });

  reloadButton.addEventListener('click', () => {
    const iframe = document.getElementById('frame');
    if (iframe && iframe.contentWindow) {
      iframe.contentWindow.location.reload();
    }
  });

 function togglePopup() {
    if (popup.classList.contains('hidden')) {
      popup.classList.remove('hidden');
      popup.offsetHeight; // Force reflow
    } else {
      popup.classList.add('hidden');
    }
  }

  settingsButton?.addEventListener('click', togglePopup);
</script>
