---
import "@/styles.css";
import { Icon } from "astro-icon/components";
---

<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta content="IE=edge" http-equiv="X-UA-Compatible" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
    <link rel="icon" href="favicon.svg" sizes="any" type="image/svg+xml">
    <title>New Tab</title>
</head>
<body class="text-text bg-base flex">
    <main id="main" class="flex flex-col flex-grow h-screen justify-center items-center bg-gradient-to-b from-black to-[#0b1528] w-full">
        <div class="flex flex-col items-center justify-center w-full max-w-lg px-4">
            <h1 class="text-6xl font-bold mb-4 text-gold">Hyperion Proxy</h1>
            <p class="text-subtle mb-8 text-center text-white/80">A secure web proxy for unrestricted browsing</p>

            <form id="form" class="flex justify-center w-full relative">
                <input
                    autofocus
                    spellcheck="false"
                    autocomplete="off"
                    id="address"
                    type="text"
                    class="text-text bg-[#0b1528]/80 border border-gold/30 focus:border-gold/70 rounded-full p-3 pr-24 mb-4 w-full shadow-lg shadow-gold/10"
                    required
                    placeholder="Search or enter a URL"
                />
                <button
                    type="submit"
                    class="absolute right-2 top-1/2 transform -translate-y-[calc(50%+8px)] text-white bg-[#0b1528] hover:bg-gold/20 transition-colors px-4 py-2 rounded-full"
                >
                    SEARCH
                </button>
            </form>

            <div class="flex space-x-6 mt-6">
                <a href="https://hyperion-assets.vercel.app/projects.html" class="text-center group">
                    <div class="w-12 h-12 bg-[#0b1528]/80 rounded-full flex items-center justify-center mb-2 group-hover:bg-gold/10 transition-colors border border-gold/30">
                        <img src="https://raw.githubusercontent.com/321EZ123/Hyperion-Assets/refs/heads/main/game.png" alt="Projects" class="w-6 h-6">
                    </div>
                </a>
                <a href="https://hyperion-assets.vercel.app/apps.html" class="text-center group">
                    <div class="w-12 h-12 bg-[#0b1528]/80 rounded-full flex items-center justify-center mb-2 group-hover:bg-gold/10 transition-colors border border-gold/30">
                        <img src="https://raw.githubusercontent.com/321EZ123/Hyperion-Assets/refs/heads/main/apps.png" alt="Apps" class="w-6 h-6">
                    </div>
                </a>
                <a href="https://hyperion-assets.vercel.app/partners.html" class="text-center group">
                    <div class="w-12 h-12 bg-[#0b1528]/80 rounded-full flex items-center justify-center mb-2 group-hover:bg-gold/10 transition-colors border border-gold/30">
                        <img src="https://raw.githubusercontent.com/321EZ123/Hyperion-Assets/refs/heads/main/partners.png" alt="Partners" class="w-6 h-6">
                    </div>
                </a>
                <a href="https://hyperion-assets.vercel.app/credits.html" class="text-center group">
                    <div class="w-12 h-12 bg-[#0b1528]/80 rounded-full flex items-center justify-center mb-2 group-hover:bg-gold/10 transition-colors border border-gold/30">
                        <img src="https://raw.githubusercontent.com/321EZ123/Hyperion-Assets/refs/heads/main/credits.png" alt="Credits" class="w-6 h-6">
                    </div>
                </a>
            </div>

            <!-- Footer with updated text and styling -->
            <footer class="w-full mt-8 bg-surface bg-surface/50 flex flex-col items-center p-4">
                <p class="text-center text-white mb-2">
                    Special thanks to Bredcat. I borrowed his code from <a href="https://github.com/Bromine-Labs/Bromine" class="underline text-gold">Bromine</a> for many aspects of this site, including the dual proxies setup, the settings content, and the bookmarks feature.
                </p>
                <section class="flex items-center gap-4">
                    <div class="flex items-center gap-3">
                        <a
                            href="https://github.com/321EZ123/Hyperion-Proxy"
                            target="_blank"
                            rel="noopener noreferrer"
                            aria-label="GitHub Repository"
                            class="hover:text-gold transition-colors"
                        >
                            <Icon name="ph:github-logo-bold" class="size-5" />
                        </a>
                        <a
                            href="https://discord.gg/Gv4rVt2SJp"
                            target="_blank"
                            rel="noopener noreferrer"
                            aria-label="Discord Server"
                            class="hover:text-gold transition-colors"
                        >
                            <Icon name="ph:discord-logo-bold" class="size-5" />
                        </a>
                    </div>
                    <span>
                        Made by <span class="text-gold underline">EZ123</span>
                    </span>
                </section>
            </footer>
        </div>
    </main>

    <script>
      import {
        setTransport,
        setWisp,
        setProxy,
        makeURL,
        getProxied,
      } from "@/utils/lethal";

      let backend = localStorage.getItem("proxy-backend") || "uv";
      let wisp = localStorage.getItem("wisp-server") || "wss://anura.pro/";
      let transport = localStorage.getItem("proxy-transport") || "epoxy";
      let search = localStorage.getItem("search-engine") || "https://search.brave.com/search?q=%s";

      setWisp(wisp);
      setProxy(backend);
      setTransport(transport);

      const form = document.getElementById("form");
      const input = document.getElementById("address");

      form?.addEventListener("submit", async (e) => {
        e.preventDefault();

        if (!input || !input.value.trim()) return;

        try {
          const proxiedUrl = await getProxied(makeURL(input.value, search));

          if (window.self !== window.top) {
            location.href = proxiedUrl;
          } else {
            location.href = localStorage.getItem("stealth-mode") ? proxiedUrl : location.replace(proxiedUrl);
          }
        } catch (error) {
          console.error("Error navigating:", error);
        }
      });

      document.querySelectorAll('[data-site]').forEach(link => {
        link.addEventListener('click', async (e) => {
          e.preventDefault();
          const site = link.dataset.site;
          let url = '';

          switch(site) {
            case 'projects':
              url = 'https://hyperion-assets.vercel.app/projects.html';
              break;
            case 'apps':
              url = 'https://hyperion-assets.vercel.app/apps.html';
              break;
            case 'partners':
              url = 'https://hyperion-assets.vercel.app/partners.html';
              break;
            case 'credits':
              url = 'https://hyperion-assets.vercel.app/credits.html';
              break;
          }

          try {
            const proxiedUrl = await getProxied(url);
            location.href = proxiedUrl;
          } catch (error) {
            console.error("Error navigating to quick link:", error);
          }
        });
      });

      const applyWallpaper = () => {
        const enabled = localStorage.getItem("wallpaper-enabled") === "true";
        const url = localStorage.getItem("wallpaper-url");
        const body = document.querySelector("body");

        body.style.backgroundImage = enabled && url ? `url('${url}')` : "none";
        body.style.backgroundSize = "cover";
        body.style.backgroundPosition = "center";
        body.style.backgroundRepeat = "no-repeat";
      };

      document.body.dataset.theme = localStorage.getItem('theme') || 'blackgold';
      applyWallpaper();

      window.addEventListener('message', function(event) {
        const msg = event.data;
        if (!msg || !msg.type) return;

        switch(msg.type) {
          case "theme-changed":
            document.body.dataset.theme = localStorage.getItem("theme");
            break;

          case "wallpaper-enabled-changed":
          case "wallpaper-url-changed":
            applyWallpaper();
            break;
        }
      });

      function updateClock() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        const seconds = now.getSeconds().toString().padStart(2, '0');
        const clockElement = document.getElementById('clock');
        if (clockElement) {
          clockElement.textContent = `${hours}:${minutes}:${seconds}`;
        }
      }

      updateClock();
      setInterval(updateClock, 1000);
    </script>
</body>
</html>
